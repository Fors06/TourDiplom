<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"      
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Green.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Светлый градиент -->
    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,1" EndPoint="1,0">
        <GradientStop Color="#FF7B68EE" Offset="0"/>
        <GradientStop Color="#FFFFC0CB" Offset="1"/>
    </LinearGradientBrush>

    <!-- Стиль заднего фона главного окна-->
    <Style x:Key="GridBackgroundStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White"/>
    </Style>

    <!-- Чёрный цвет текста для светлой темы -->
    <SolidColorBrush x:Key="TextForegroundColor" Color="Black"/>
    
    <!-- Придумать на задний фон что то вместо белого -->
    <!-- Пока что стоит то что выше -->
    <LinearGradientBrush x:Key="GridBackgroundStyle1" StartPoint="0,1" EndPoint="1,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>


    <!-- Стиль заднего фона у Page -->
    <Style TargetType="Grid" x:Key="GridPageStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    </Style>

    <!-- Стиль StackPanel -->
    <Style TargetType="StackPanel" x:Key="StackPanelStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    </Style>

    <!-- Основные стили кнопок -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFF0F8FF"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFADD8E6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для ComboBox -->
    <Style TargetType="ComboBox"  BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" x:Key="ComboBoxStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- Таблицы -->
    <Style TargetType="DataGridColumnHeader" x:Key="ColumnHeaderStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="DataGridCell" x:Key="CellStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="DataGridRow" x:Key="RowStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Стиль для текста в TextBLock -->
    <Style TargetType="TextBlock" x:Key="TextBlockStyle">
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundColor}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- Стильл для RadioButton -->
    <Style TargetType="RadioButton" x:Key="RadioButtonStyle">
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundColor}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    
    <!--Стиль для Frame -->
    <Style TargetType="Frame" x:Key="FrameStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

    <Style x:Key="FlatButton" BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

</ResourceDictionary>